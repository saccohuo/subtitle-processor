version: '3.8'

services:
  subtitle-processor:
    build:  # 直接运行、不构建的时候，注释掉
      context: .
    image: subtitle-processor:latest
    container_name: subtitle-processor
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - "5000:5000"  # Web 界面
      - "5001:5900"  # VNC 服务端口
    volumes:
      # - /share/homes/hsk/subtitle-processor/uploads:/app/uploads
      # - /share/homes/hsk/subtitle-processor/videos:/app/videos
      # - /share/homes/hsk/subtitle-processor/outputs:/app/outputs
      # - /share/homes/hsk/subtitle-processor/config:/app/config
      # - /share/homes/hsk/subtitle-processor/models:/app/models
      # - /share/homes/hsk/subtitle-processor/firefox_profile:/root/.mozilla/firefox  # Firefox 配置目录
      - ./app:/app/app  # 映射应用代码
      - ./uploads:/app/uploads
      - ./videos:/app/videos
      - ./outputs:/app/outputs
      - ./config:/app/config
      - ./models:/app/models
      - ./firefox_profile:/root/.mozilla/firefox  # Firefox 配置目录
    environment:
      - TZ=Asia/Shanghai
      - FLASK_APP=run_app.py
      - FLASK_ENV=development
      # 只对外部请求使用代理
      # - NO_PROXY=transcribe-audio,localhost,127.0.0.1
      # - ALL_PROXY=http://host.docker.internal:20172
      # - HTTP_PROXY=http://host.docker.internal:20172
      # - HTTPS_PROXY=http://host.docker.internal:20172
      # 从配置文件读取所有配置
      - CONFIG_PATH=/app/config/config.yml
    networks:
      - srt-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - deeplx

  transcribe-audio:
    build:  # 直接运行、不构建的时候，注释掉
      context: ./transcribe-audio
      dockerfile: Dockerfile
    image: transcribe-audio:latest
    container_name: transcribe-audio
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "10095:10095"  # API 服务端口
    volumes:
      # - /share/homes/hsk/subtitle-processor/uploads:/app/uploads
      # - /share/homes/hsk/subtitle-processor/videos:/app/videos
      # - /share/homes/hsk/subtitle-processor/models:/app/models
      # - /share/homes/hsk/subtitle-processor/outputs:/app/outputs
      # - /share/homes/hsk/subtitle-processor/config:/app/config
      - ./uploads:/app/uploads
      - ./videos:/app/videos
      - ./models:/app/models
      - ./outputs:/app/outputs
      - ./config:/app/config
    environment:
      - TZ=Asia/Shanghai
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - MODEL_DIR=/app/models
      - MODELSCOPE_CACHE=/app/models
      - HF_HOME=/app/models
      - TORCH_HOME=/app/models
      - FUNASR_MODEL=paraformer-zh
      - FUNASR_VAD_MODEL=fsmn-vad
      - FUNASR_PUNC_MODEL=ct-punc
      - FUNASR_SPK_MODEL=cam++
      # 从配置文件读取所有配置
      - CONFIG_PATH=/app/config/config.yml
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - srt-network

  deeplx:
    image: ghcr.io/owo-network/deeplx:latest
    container_name: deeplx
    restart: unless-stopped
    ports:
      - "1188:1188"
    networks:
      - srt-network

  telegram-bot:
    build:  # 直接运行、不构建的时候，注释掉
      context: ./telegram-bot
      dockerfile: Dockerfile
    image: telegram-bot:latest
    container_name: telegram-bot
    restart: always  # 改为always，确保任何情况下都重启
    environment:
      - TZ=Asia/Shanghai
      - SUBTITLE_PROCESSOR_URL=http://subtitle-processor:5000
      # - NO_PROXY=subtitle-processor,localhost,127.0.0.1
      # - ALL_PROXY=http://host.docker.internal:20172
      # - HTTP_PROXY=http://host.docker.internal:20172
      # - HTTPS_PROXY=http://host.docker.internal:20172
      # 从配置文件读取所有配置
      - CONFIG_PATH=/app/config/config.yml
    volumes:
      - ./config:/app/config
      # - /share/homes/hsk/subtitle-processor/config:/app/config
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import requests; requests.get('http://localhost:8081/health', timeout=10)\" || exit 1"]
      interval: 60s        # 每60秒检查一次
      timeout: 10s         # 检查超时10秒
      retries: 3           # 失败3次后认为不健康
      start_period: 60s    # 启动后60秒开始检查
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - srt-network
    depends_on:
      - subtitle-processor
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  srt-network:
    driver: bridge
